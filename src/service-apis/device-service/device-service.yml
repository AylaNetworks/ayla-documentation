swagger: "2.0"
info:
basePath: /apiv1
paths:
  /devices:
    get:
      tags:
        - devices
      summary: Retrieves devices for the logged-in user.
      description: Request headers? Filters? Response headers?
      operationId: getDevicesOfLoginUser
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DeviceWrapper"
        "401":
          description: Unauthorized
  /devices/register:
    get:
      tags:
        - devices
      summary: Retrieves a device registration candidate.
      description: None.
      operationId: getRegisterDevice
      produces:
        - application/json
      parameters:
        - name: ip
          in: query
          description: Public IP address of requesting client. If no IP address is passed, the service matches the requesting cient IP address. When web site implements device registration, it must pass the requesting client remote IP (to return proper candidate). If request originates from a mobile application (on the same network as the device), no IP parameter is required (the mobile device and the Ayla module share the same public IP.
          required: false
          type: string
          default: "*"
        - name: dsn
          in: query
          description: Unique device serial number. If specified, device with this DSN is returned.
          required: false
          type: string
          default: "*"
        - name: regtype
          in: query
          description: Device registration type. Required for Node registration type. Optional for Button-Push and Same-LAN. Valid input is Same-LAN, Button-Push, AP-Mode, Display, Dsn, and None (for OEM), 'Node' (for Gateway).
          required: false
          type: string
          default: "Dsn"
        - name: time
          in: query
          description: Time in minutes. Default is 5.
          required: false
          type: string
          default: 5
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetRegistrationCandidateOutput"
        "401":
          description: Unauthorized
        "404":
          description: Not Found (Unable to find registrable device)
        "412":
          description: Precondition failed, Gateway Registration window is not open
definitions:
  DeviceWrapper:
    properties:
      device:
        type: array
        items:
          $ref: '#/definitions/Device'
    xml:
      name: DeviceWrapper
  Device:
    properties:
      id:
        type: integer 
        description: Device identifier.
      product_name:
        type: string 
        description: Device user-friendly product name.
      model:
        type: string 
        description: Model number of Ayla module.
      dsn:
        type: string 
        description: Unique device serial number.
      oem:
        type: string 
        description: OEM company manufacturer name.
      oem_model:
        type: string 
        description: Model number of OEM host application board.
      sw_version:
        type: string 
        description: Software version (associated with the device).
      user_id:
        type: string 
        description: Ayla-asigned ID for the user (associated with the device).
      user_uuid:
        type: string 
        description: Universally Unique Identifier for the user.
      template_id:
        type: integer 
        description: Unique ID assigned to the template.
      mac:
        type: string 
        description: IP MAC address of the device.
      ip:
        type: string 
        description: IP address of the device.
      lan_ip:
        type: string 
        description: LAN IP of the device.
      ssid:
        type: string 
        description: SSID of the device.
      connected_at:
        type: string 
        format: date-time
        description: Device connected at (timestamp) (ISO8601 Format).
      key:
        type: integer 
        description: Internal ID of the device.
      product_class:
        type: string 
        description: Type of product (defined by OEM).
      has_properties:
        type: boolean 
        description: Does device have properties?"
      lan_enabled:
        type: boolean 
        description: Is device LAN enabled?"
      enable_ssl:
        type: boolean 
        description: Is device SSL enabled?"
      ans_enabled:
        type: boolean 
        description: Is device ANS enabled?"
      ans_server:
        type: string 
        description: ANS notification server URL.
      log_enabled:
        type: boolean 
        description: Is device LOG enabled?"
      registered:
        type: boolean 
        description: Is device registered?"
      connection_status:
        type: string 
        description: Device connection status ['Online', 'Offline', 'Initializing'].
      registration_type:
        type: string 
        description: Type of registration ['Same-LAN', 'Button-Push', 'AP Model', 'Display', 'Dsn', 'None'].
      lat:
        type: number
        format: decimal (10,6)
        description: Device location, latitude (in degrees).
      lng:
        type: number
        format: decimal (10,6)
        description: Device location, longitude (in degrees).
      locality:
        type: string 
        description: Device locality.
      homekit:
        type: string 
        description: Homekit info.
      module_updated_at:
        type: string 
        format: date-time
        description: Device module updated at (timestamp) (ISO8601 Format).
      registrable:
        type: boolean 
        description: Is device registrable?"
      regtoken:
        type: string 
        description: Regtoken of the device.
      setup_token:
        type: string 
        description: Setup token of the device.
      provisional:
        type: boolean 
        description: Is device provisional?"
      device_type:
        type: string 
        description: Type of device ['Wifi', 'Gateway', 'Node'].
      activated_at:
        type: string 
        format: date-time 
        description: Device activated at (timestamp) (ISO8601 Format).
      created_at:
        type: string 
        format: date-time 
        description: Device created at (timestamp) (ISO8601 Format).
      grant:
        $ref: '#/definitions/Grant'
      gateway-type:
        type: string 
        description: Gateway type (only if device is a gateway).
    xml:
      name: Device
  Grant:
    properties:
      user-id:
        type: integer
      start-date-at:
        type: string
        format: Date-time
      end-date-at:
        type: string
        format: Date-time
      operation:
        type: string
    xml: 
      name: Grant
  GetRegistrationCandidateOutput:
    properties:
      device:
        type: array
        items:
          $ref: '#/definitions/GetRegistrationCandidateOutputDetail'
    xml:
      name: GetRegistrationCandidateOutput
  GetRegistrationCandidateOutputDetail:
    properties:
      dsn:
        type: string
        description: Unique device serial number.
      lan_ip:
        type: string
        description: LAN IP of the device.
      model:
        type: string
        description: Model number of Ayla module.
      oem_model:
        type: string
        description: Model number of OEM host application board (associated with this DSN).
      product_name:
        type: string
        description: Device user-friendly product name.
      connected_at:
        type: string
        format: date-time
        description: Device connected at (timestamp) (ISO8601 Format).
      product_class:
        type: string
        description: Type of product (defined by OEM).
    xml:
      name: GetRegistrationCandidateOutputDetail 
