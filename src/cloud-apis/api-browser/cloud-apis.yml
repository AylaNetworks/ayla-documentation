openapi: 3.0.0
#info:
#  title: Ayla Cloud APIs
#  description: This is the description.
#  version: 1.0.0
#servers:
#  - url: https://ads-dev.aylanetworks.com/apiv1
#    description: US Development
#  - url: https://ads-field.aylanetworks.com/apiv1
#    description: US Field
#  - url: https://ads-dev.ayla.com.cn/apiv1
#    description: China Development
#  - url: https://ads-field.ayla.com.cn/apiv1
#    description: China Field
#  - url: https://ads-field-eu.aylanetworks.com/apiv1
#    description: EU Field
#security:
#  - bearerAuth: []
#Access-Control-Allow-Headers: Content-Type, Accept, Authorization
paths:
  /api/v1/oemAccessRules:
    get:
      tags: 
      - Datastream Service
      summary: 
      description: Returns an array of access rules associated with the caller's role.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OemAccessRuleWrapper"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/v1/oemAccessRules/{accessRuleId}:
    get:
      tags: 
      - Datastream Service
      summary: 
      description: Returns the specified access rule if it is associated with the caller's role.
      parameters:
        - $ref: "#/components/parameters/accessRuleId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OemAccessRuleWrapper"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /apiv1/devices:
    get:
      tags: 
      - Device Service
      summary: 
      description: Returns an array of devices registered to, or shared with, the caller.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceWrapper"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /apiv1/devices/{deviceId}:
    get:
      tags: 
      - Device Service
      summary: 
      description: Returns the specified device if it is owned by, or shared with, the caller.
      parameters:
        - $ref: "#/components/parameters/deviceId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceWrapper"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    put:
      tags: 
      - Device Service
      summary: 
      description: Updates the specified attribute of the specified device.
      parameters:
        - $ref: "#/components/parameters/deviceId"
      requestBody:
        description: This is the description.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceProductName"
      responses:
        "200":
          description: OK
        "400":
          description: Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Not allowed and/or not supported on this device
  /users/get_user_profile:
    get:
      tags: 
      - User Service
      summary: 
      description: Returns information about the caller's user profile.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: Unauthorized
  /users/sign_in:
    post:
      tags: 
      - User Service
      summary: 
      description: Returns an access_token and refresh_token that can be used in subsequent API calls.
      requestBody:
        description: This is the description.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignInRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignInResponse"
        "401":
          description: Unauthorized
        "404":
          description: The app_id and/or app_secret are invalid.
  /users:
    delete:
      tags: 
      - User Service
      summary: 
      description: Deletes the caller's user account.
      responses:
        "204":
          description: No Content (Success)
        "401":
          description: Unauthorized
        "404":
          description: Not Found
# See https://swagger.io/docs/specification/components/
components:
#  securitySchemes:
#    bearerAuth:
#      type: http
#      scheme: bearer
  schemas:
    DeviceWrapper:
      properties:
        device:
          $ref: '#/components/schemas/Device'
    Device:
      properties:
        id:
          type: integer 
          description: Device identifier.
        product_name:
          type: string 
          description: Device user-friendly product name.
        model:
          type: string 
          description: Model number of Ayla module.
        dsn:
          type: string 
          description: Unique device serial number.
        oem:
          type: string 
          description: OEM company manufacturer name.
        oem_model:
          type: string 
          description: Model number of OEM host application board.
        sw_version:
          type: string 
          description: Software version (associated with the device).
        user_id:
          type: string 
          description: Ayla-asigned ID for the user (associated with the device).
        user_uuid:
          type: string 
          description: Universally Unique Identifier for the user.
        template_id:
          type: integer 
          description: Unique ID assigned to the template.
        mac:
          type: string 
          description: IP MAC address of the device.
        ip:
          type: string 
          description: IP address of the device.
        lan_ip:
          type: string 
          description: LAN IP of the device.
        ssid:
          type: string 
          description: SSID of the device.
        connected_at:
          type: string 
          format: date-time
          description: Device connected at (timestamp) (ISO8601 Format).
        key:
          type: integer 
          description: Internal ID of the device.
        product_class:
          type: string 
          description: Type of product (defined by OEM).
        has_properties:
          type: boolean 
          description: Does device have properties?"
        lan_enabled:
          type: boolean 
          description: Is device LAN enabled?"
        enable_ssl:
          type: boolean 
          description: Is device SSL enabled?"
        ans_enabled:
          type: boolean 
          description: Is device ANS enabled?"
        ans_server:
          type: string 
          description: ANS notification server URL.
        log_enabled:
          type: boolean 
          description: Is device LOG enabled?"
        registered:
          type: boolean 
          description: Is device registered?"
        connection_status:
          type: string 
          description: Device connection status ['Online', 'Offline', 'Initializing'].
        registration_type:
          type: string 
          description: Type of registration ['Same-LAN', 'Button-Push', 'AP Model', 'Display', 'Dsn', 'None'].
        lat:
          type: number
          format: decimal (10,6)
          description: Device location, latitude (in degrees).
        lng:
          type: number
          format: decimal (10,6)
          description: Device location, longitude (in degrees).
        locality:
          type: string 
          description: Device locality.
        homekit:
          type: string 
          description: Homekit info.
        module_updated_at:
          type: string 
          format: date-time
          description: Device module updated at (timestamp) (ISO8601 Format).
        registrable:
          type: boolean 
          description: Is device registrable?"
        regtoken:
          type: string 
          description: Regtoken of the device.
        setup_token:
          type: string 
          description: Setup token of the device.
        provisional:
          type: boolean 
          description: Is device provisional?"
        device_type:
          type: string 
          description: Type of device ['Wifi', 'Gateway', 'Node'].
        activated_at:
          type: string 
          format: date-time 
          description: Device activated at (timestamp) (ISO8601 Format).
        created_at:
          type: string 
          format: date-time 
          description: Device created at (timestamp) (ISO8601 Format).
        grant:
          $ref: '#/components/schemas/Grant'
        gateway-type:
          type: string 
          description: Gateway type (only if device is a gateway).
    DeviceProductName:
      properties:
        product_name:
          type: string 
          description: Device user-friendly product name.
    Grant:
      properties:
        user-id:
          type: integer
        start-date-at:
          type: string
          format: Date-time
        end-date-at:
          type: string
          format: Date-time
        operation:
          type: string
    OemAccessRuleWrapper:
      properties:
        OemAccessRule:
          $ref: "#/components/schemas/OemAccessRule"
    OemAccessRule:
      properties:
        id:
          type: integer 
          description: Access rule identifier.
        role:
          type: string
          description: e.g. OEM::Admin.
        oem:
          type: string
          description: oem id.
        property_name:
          type: string
          description: name of device property.
        oem_model:
          type: string
          description: e.g. linuxevb
        client_type:
          type: string
          description: e.g. cloud
        subscription_type:
          type: string
          description: connectivity, datapoint, datapointack, location, registration
        access_grant:
          type: boolean
          description: true means grant access and false means revoke access
        created_at:
          type: string
          format: date-time
          description: e.g. 2018-11-20T15:36:59Z
        updated_at:
          type: string
          format: date-time
          description: e.g. 2018-11-20T15:36:59Z
    UserProfile:
      properties:
        approved:
          type: boolean
          description: sss
        confirmed:
          type: boolean
          description: sss
        city: 
          type: string
          description: sss
        company: 
          type: string
          description: sss
        confirmed_at: 
          type: string
          format: date-time
          description: sss
        country: 
          type: string
          description: sss
        created_at:
          type: string
          format: date-time
          description: sss
        email: 
          type: string
          description: sss
        firstname: 
          type: string
          description: sss
        lastname: 
          type: string
          description: sss
        phone_country_code:
          type: string
          description: sss
        phone: 
          type: string
          description: sss
        state: 
          type: string
          description: sss
        street:
          type: string
          description: sss
        updated_at: 
          type: string
          format: date-time
          description: sss
        uuid: 
          type: string
          description: sss
        zip:
          type: string
          description: sss
    UserSignInRequest:
      properties:
        user:
          $ref: "#/components/schemas/SignInRequest"
    SignInRequest:
      properties:
        email:
          type: string
          desription: sss
        password:
          type: string
          description: sss
        application:
          $ref: "#/components/schemas/AppIdSecret"
    AppIdSecret:
      properties:
        app_id:
          type: string
          description: sss
        app_secret:
          type: string
          description: sss
    SignInResponse:
      properties:
        access_token:
          type: string
          description: sss
        refresh_token:
          type: string
          description: sss
        expires_in:
          type: integer
          description: sss
        role:
          type: string
          description: sss
        role_tags:
          type: array
          items:
            type: string
          description: sss
  parameters:
    accessRuleId:
      name: accessRuleId
      in: path
      required: true
      schema:
        type: string
      description: 
    deviceId:
      name: deviceId
      in: path
      required: true
      schema:
        type: string
      description: 
